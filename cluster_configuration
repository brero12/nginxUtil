upstream single-spa {
      # ip hash to keep session by customer
	  ip_hash;
	  #single-spa ecosystem 1, ip and port for references
      server 127.0.0.1:8080;
	  #single-spa ecosystem 2, ip and port for references
      server 127.0.0.1:7070;
    }
	
	
server {
		listen       443 ssl http2;       
        server_name  _;
		
		ssl_certificate /etc/nginx/certs/certificate.crt;
		ssl_certificate_key /etc/nginx/certs/certificate.key;
		ssl_protocols TLSv1.2;
		ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
		ssl_prefer_server_ciphers off;

		# Security headers
		add_header Content-Security-Policy "default-src https: data: 'unsafe-inline' 'unsafe-eval'" always;
		add_header Strict-Transport-Security "max-age=336000; includeSubDomains" always;
		add_header X-Frame-Options "SAMEORIGIN" always;
		add_header X-XSS-Protection "1; mode=block" always;
		add_header X-Content-Type-Options "nosniff" always;
		add_header Server "https" always;
		add_header Referrer-Policy "strict-origin-when-cross-origin" always;      
		add_header Set-Cookie "Path=/; HttpOnly; Secure";  

		return 301 https://$host$request_uri;      

location / {
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://single-spa/;
		proxy_intercept_errors on;
		proxy_set_header Host $http_host;
		proxy_set_header X-Scheme $scheme;
        }
		
		 error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
}
